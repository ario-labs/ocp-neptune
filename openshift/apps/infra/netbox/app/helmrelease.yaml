---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: netbox
spec:
  interval: 30m
  chart:
    spec:
      chart: netbox
      version: 4.1.1
      sourceRef:
        kind: HelmRepository
        name: bootc-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: "netboxcommunity/netbox"
      tag: "v4.2.3-3.2.0"
    envFrom:
      - secretRef:
          name: netbox-secret
    podSecurityContext:
      fsGroup: 1000790000
    securityContext:
      runAsUser: 1000790000
      runAsGroup: 1000790000
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api
            port: 80
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    existingSecret: "netbox-secret"
    superuser:
      username: "nick.a@redhat.com"
      name: "nick.a@redhat.com"
      email: "nick.a@redhat.com"
    admins:
      - ["Nick Arellano", "nick.a@redhat.com"]
    loginRequired: false
    logging:
      disable_existing_loggers: false
      handlers:
        console:
          class: logging.StreamHandler
      loggers:
        netbox.authentication.*:
          handlers:
            - console
          level: DEBUG
      version: 1
    storageBackend: storages.backends.s3boto3.S3Boto3Storage
    storageConfig:
      AWS_ACCESS_KEY_ID: "${SECRET_S3_ACCESS_KEY}"
      AWS_SECRET_ACCESS_KEY: "${SECRET_S3_SECRET_KEY}"
      AWS_STORAGE_BUCKET_NAME: "ocp-neptune-netbox"
      AWS_S3_ENDPOINT_URL: "${AWS_S3_ENDPOINT_URL}"
      AWS_S3_REGION_NAME: "us-west-1"
    metricsEnabled: true
    postgresql:
      enabled: false
    redis:
      enabled: false
    tasksRedis:
      host: dragonfly.database.svc.cluster.local
      port: 6379
    cachingRedis:
      host: dragonfly.database.svc.cluster.local
      port: 6379
    externalDatabase:
      host: postgres-rw.database.svc.cluster.local
      port: 5432
      database: netbox
      username: netbox
      existingSecretName: "netbox-secret"
      existingSecretKey: "db_password"
    persistence:
      enabled: false
    reportsPersistence:
      enabled: false
    housekeeping:
      podSecurityContext:
        fsGroup: 1000790000
      securityContext:
        runAsUser: 1000790000
        runAsGroup: 1000790000
    init:
      image:
        repository: docker.io/library/busybox
        tag: 1.36.1
        pullPolicy: IfNotPresent
      securityContext:
        runAsUser: 1000790000
        runAsGroup: 1000790000
    updateStrategy:
      type: RollingUpdate
    worker:
      enabled: true
      podSecurityContext:
        fsGroup: 1000790000
      securityContext:
        runAsUser: 1000790000
        runAsGroup: 1000790000
      updateStrategy:
        type: RollingUpdate
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
